read_rules <- function(f){
  read.delim(f, FALSE, "|", nrows = which(readLines(f) == "")-1)
}

read_updates <- function(f){
  strsplit(
    Filter(
      \(x) grepl(",", x),
      readLines(f)
    ),
    ","
  )
}

find_correct_order <- function(rules,update){
  # only keep rules that refer to both before and after
  v <- r[rules$V2 %in% update & rules$V1 %in% update,]
  # first one in the order for this update is the
  # item that appears in the update but not the
  # filtered rules
  # the rest are ordered by number of times they appear
  # in the after column
  c(setdiff(update, v$V2), names(sort(table(v$V2))))
}


is_correct_order <- function(rules, updates){
  # if the correct order and the actual order match,
  # it is valid
  all(find_correct_order(rules,updates) == updates)
}

# been treating the numbers as characters up until now
middle_num <- function(x) as.numeric(x[ceiling(length(x)/2)])


part_1 <- function(updates,valids){
  sum(
    mapply(
      middle_num,
      # only keep the valid updates
      updates[valids]
    )
  )
}

part_2 <- function(u,r,v){
  sum(
    mapply(
      middle_num,
      mapply(
        # keep the correct order
        \(x) find_correct_order(r, x),
        # only keep the invalid updates
        u[!v]
        )
    )
  )
}

file <- "./data/05"
rules <- read_rules(file)
updates <- read_updates(file)
valids <- mapply(\(x) is_correct_order(rules, x), updates)

part_1(updates, valids)
part_2(updates,rules,valids)
